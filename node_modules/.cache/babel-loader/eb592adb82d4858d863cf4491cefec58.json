{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurda\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\My Personal Web Projects\\\\Food_Order_App\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [mealsArr, setMealsArr] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [httpsError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-meals-http-9c6df-default-rtdb.firebaseio.comasd/meals.json');\n\n      if (!response.ok) {\n        setHttpError('something went wrong!');\n      }\n\n      const responseData = await response.json();\n      console.log(responseData);\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          price: responseData[key].price,\n          description: responseData[key].description\n        });\n      }\n\n      setMealsArr(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n  }, []);\n  let content = '';\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (httpsError != '') {\n    content = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: httpsError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = mealsArr.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      price: meal.price,\n      id: meal.id,\n      name: meal.name,\n      description: meal.description\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"BlhJGsHvzp4h/lnjK44vvmGkxo0=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/yurda/OneDrive/Masaüstü/My Personal Web Projects/Food_Order_App/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["classes","Card","MealItem","useEffect","useState","AvailableMeals","mealsArr","setMealsArr","isLoading","setIsLoading","hasError","setHasError","httpsError","setHttpError","fetchMeals","response","fetch","ok","responseData","json","console","log","loadedMeals","key","push","id","name","price","description","content","map","meal","meals"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,UAAD,EAAaC,YAAb,IAA6BT,QAAQ,CAAC,IAAD,CAA3C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0EAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChBJ,QAAAA,YAAY,CAAC,uBAAD,CAAZ;AACD;;AACD,YAAMK,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AAEA,YAAMI,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,GAAX,IAAkBL,YAAlB,EAAgC;AAC9BI,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAER,YAAY,CAACK,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,KAAK,EAAET,YAAY,CAACK,GAAD,CAAZ,CAAkBI,KAHV;AAIfC,UAAAA,WAAW,EAAEV,YAAY,CAACK,GAAD,CAAZ,CAAkBK;AAJhB,SAAjB;AAMD;;AACDrB,MAAAA,WAAW,CAACe,WAAD,CAAX;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KArBD;;AAsBAK,IAAAA,UAAU;AACX,GAxBQ,EAwBN,EAxBM,CAAT;AAyBA,MAAIe,OAAO,GAAG,EAAd;;AACA,MAAIrB,SAAJ,EAAe;AACbqB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,MAAIjB,UAAU,IAAI,EAAlB,EAAsB;AACpBiB,IAAAA,OAAO,gBAAG;AAAA,gBAAKjB;AAAL;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAEO;AACLiB,IAAAA,OAAO,GAAGvB,QAAQ,CAACwB,GAAT,CAAaC,IAAI,iBACzB,QAAC,QAAD;AACE,MAAA,KAAK,EAAEA,IAAI,CAACJ,KADd;AAGE,MAAA,EAAE,EAAEI,IAAI,CAACN,EAHX;AAIE,MAAA,IAAI,EAAEM,IAAI,CAACL,IAJb;AAKE,MAAA,WAAW,EAAEK,IAAI,CAACH;AALpB,OAEOG,IAAI,CAACN,EAFZ;AAAA;AAAA;AAAA;AAAA,YADQ,CAAV;AASD;;AACD,sBACE;AAAS,IAAA,SAAS,EAAEzB,OAAO,CAACgC,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtDD;;GAAMxB,c;;KAAAA,c;AAuDN,eAAeA,cAAf","sourcesContent":["import classes from './AvailableMeals.module.css';\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst AvailableMeals = () => {\r\n  const [mealsArr, setMealsArr] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [httpsError, setHttpError] = useState(null);\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch(\r\n        'https://react-meals-http-9c6df-default-rtdb.firebaseio.comasd/meals.json'\r\n      );\r\n      if (!response.ok) {\r\n        setHttpError('something went wrong!');\r\n      }\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n\r\n      const loadedMeals = [];\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          price: responseData[key].price,\r\n          description: responseData[key].description,\r\n        });\r\n      }\r\n      setMealsArr(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n    fetchMeals();\r\n  }, []);\r\n  let content = '';\r\n  if (isLoading) {\r\n    content = <h1>Loading...</h1>;\r\n  }\r\n  if (httpsError != '') {\r\n    content = <h1>{httpsError}</h1>;\r\n  } else {\r\n    content = mealsArr.map(meal => (\r\n      <MealItem\r\n        price={meal.price}\r\n        key={meal.id}\r\n        id={meal.id}\r\n        name={meal.name}\r\n        description={meal.description}\r\n      />\r\n    ));\r\n  }\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{content}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}