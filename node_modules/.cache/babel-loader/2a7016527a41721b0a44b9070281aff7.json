{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurda\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\My Personal Web Projects\\\\Food_Order_App\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [mealsArr, setMealsArr] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  useEffect(() => {\n    try {\n      const fetchMeals = async () => {\n        const response = await fetch('https://react-meals-http-9c6df-default-rtdb.firebaseio.com/meals.jsons');\n        const responseData = await response.json();\n        console.log(responseData);\n        const loadedMeals = [];\n\n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            price: responseData[key].price,\n            description: responseData[key].description\n          });\n        }\n\n        setMealsArr(loadedMeals);\n        setIsLoading(false);\n      };\n\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setHasError(true);\n      setErrorMsg(error.msg);\n    }\n  }, []);\n  let content = '';\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this);\n  } else if (hasError) {\n    content = errorMsg;\n  } else {\n    content = mealsArr.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      price: meal.price,\n      id: meal.id,\n      name: meal.name,\n      description: meal.description\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"1S/a6juvyK34W0/8iqu0fDaOiAo=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/yurda/OneDrive/Masaüstü/My Personal Web Projects/Food_Order_App/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["classes","Card","MealItem","useEffect","useState","AvailableMeals","mealsArr","setMealsArr","isLoading","setIsLoading","hasError","setHasError","errorMsg","setErrorMsg","fetchMeals","response","fetch","responseData","json","console","log","loadedMeals","key","push","id","name","price","description","error","msg","content","map","meal","meals"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMW,UAAU,GAAG,YAAY;AAC7B,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wEAD0B,CAA5B;AAGA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AAEA,cAAMI,WAAW,GAAG,EAApB;;AACA,aAAK,MAAMC,GAAX,IAAkBL,YAAlB,EAAgC;AAC9BI,UAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,YAAAA,EAAE,EAAEF,GADW;AAEfG,YAAAA,IAAI,EAAER,YAAY,CAACK,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,YAAAA,KAAK,EAAET,YAAY,CAACK,GAAD,CAAZ,CAAkBI,KAHV;AAIfC,YAAAA,WAAW,EAAEV,YAAY,CAACK,GAAD,CAAZ,CAAkBK;AAJhB,WAAjB;AAMD;;AACDpB,QAAAA,WAAW,CAACc,WAAD,CAAX;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAlBD;;AAmBAK,MAAAA,UAAU;AACX,KArBD,CAqBE,OAAOc,KAAP,EAAc;AACdnB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,WAAW,CAACe,KAAK,CAACC,GAAP,CAAX;AACD;AACF,GA3BQ,EA2BN,EA3BM,CAAT;AA4BA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAItB,SAAJ,EAAe;AACbsB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAEO,IAAIpB,QAAJ,EAAc;AACnBoB,IAAAA,OAAO,GAAGlB,QAAV;AACD,GAFM,MAEA;AACLkB,IAAAA,OAAO,GAAGxB,QAAQ,CAACyB,GAAT,CAAaC,IAAI,iBACzB,QAAC,QAAD;AACE,MAAA,KAAK,EAAEA,IAAI,CAACN,KADd;AAGE,MAAA,EAAE,EAAEM,IAAI,CAACR,EAHX;AAIE,MAAA,IAAI,EAAEQ,IAAI,CAACP,IAJb;AAKE,MAAA,WAAW,EAAEO,IAAI,CAACL;AALpB,OAEOK,IAAI,CAACR,EAFZ;AAAA;AAAA;AAAA;AAAA,YADQ,CAAV;AASD;;AACD,sBACE;AAAS,IAAA,SAAS,EAAExB,OAAO,CAACiC,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxDD;;GAAMzB,c;;KAAAA,c;AAyDN,eAAeA,cAAf","sourcesContent":["import classes from './AvailableMeals.module.css';\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst AvailableMeals = () => {\r\n  const [mealsArr, setMealsArr] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  useEffect(() => {\r\n    try {\r\n      const fetchMeals = async () => {\r\n        const response = await fetch(\r\n          'https://react-meals-http-9c6df-default-rtdb.firebaseio.com/meals.jsons'\r\n        );\r\n        const responseData = await response.json();\r\n        console.log(responseData);\r\n\r\n        const loadedMeals = [];\r\n        for (const key in responseData) {\r\n          loadedMeals.push({\r\n            id: key,\r\n            name: responseData[key].name,\r\n            price: responseData[key].price,\r\n            description: responseData[key].description,\r\n          });\r\n        }\r\n        setMealsArr(loadedMeals);\r\n        setIsLoading(false);\r\n      };\r\n      fetchMeals();\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setHasError(true);\r\n      setErrorMsg(error.msg);\r\n    }\r\n  }, []);\r\n  let content = '';\r\n  if (isLoading) {\r\n    content = <h1>Loading...</h1>;\r\n  } else if (hasError) {\r\n    content = errorMsg;\r\n  } else {\r\n    content = mealsArr.map(meal => (\r\n      <MealItem\r\n        price={meal.price}\r\n        key={meal.id}\r\n        id={meal.id}\r\n        name={meal.name}\r\n        description={meal.description}\r\n      />\r\n    ));\r\n  }\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{content}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}