{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurda\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Food_Order_App\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    console.log('Current Total Amount: ' + updatedTotalAmount);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    console.log('Existing Cart Item Index: ' + existingCartItemIndex);\n    const existingCartItem = state.items[existingCartItemIndex];\n    console.log('Existing Cart Item: ' + existingCartItem);\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n      console.log(existingCartItemIndex);\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/yurda/OneDrive/Masaüstü/Food_Order_App/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","console","log","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    console.log('Current Total Amount: ' + updatedTotalAmount);\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      item => item.id === action.item.id\r\n    );\r\n    console.log('Existing Cart Item Index: ' + existingCartItemIndex);\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    console.log('Existing Cart Item: ' + existingCartItem);\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n      console.log(existingCartItemIndex);\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === 'REMOVE') {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      item => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter(item => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = item => {\r\n    dispatchCartAction({ type: 'ADD', item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = id => {\r\n    dispatchCartAction({ type: 'REMOVE', id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}