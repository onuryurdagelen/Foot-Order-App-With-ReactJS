{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurda\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\My Personal Web Projects\\\\Food_Order_App\\\\01-starting-project\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal';\nimport React, { useContext, useState } from 'react';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [showCheckout, setShowCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, SetDidSubmit] = useState(false);\n\n  const onCancelCheckOut = () => {\n    setShowCheckout(false);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://react-meals-http-9c6df-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    SetDidSubmit(true);\n  };\n\n  const cartModalContent = {\n    cartItems\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: classes.total,\n    children: hasItems ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.empty__text,\n        children: \"Your cart is empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes['button--alt'],\n          onClick: props.onCloseCart,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n\n  {\n    showCheckout && hasItems && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancelCheckout: onCancelCheckOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  {\n    hasItems && !showCheckout && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onCloseCart,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCheckout(true),\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      price: item.price,\n      name: item.name,\n      amount: item.amount,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onCloseCart: props.onCloseCart,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: hasItems ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.empty__text,\n          children: \"Your cart is empty!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes['button--alt'],\n            onClick: props.onCloseCart,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), showCheckout && hasItems && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancelCheckout: onCancelCheckOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), hasItems && !showCheckout && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onCloseCart,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCheckout(true),\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"BisdI0nqOa+88B6USD6iBWTroSs=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/yurda/OneDrive/Masaüstü/My Personal Web Projects/Food_Order_App/01-starting-project/src/components/Cart/Cart.js"],"names":["classes","Modal","React","useContext","useState","CartContext","CartItem","Checkout","Cart","props","showCheckout","setShowCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","isSubmitting","setIsSubmitting","didSubmit","SetDidSubmit","onCancelCheckOut","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","id","removeItem","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartModalContent","cartItems","total","empty__text","actions","onCloseCart","button","map","price","name","bind"],"mappings":"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","sourcesContent":["import classes from './Cart.module.css';\r\nimport Modal from '../UI/Modal';\r\nimport React, { useContext, useState } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './Checkout';\r\nconst Cart = props => {\r\n  const [showCheckout, setShowCheckout] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const totalAmount = `${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, SetDidSubmit] = useState(false);\r\n\r\n  const onCancelCheckOut = () => {\r\n    setShowCheckout(false);\r\n  };\r\n\r\n  const cartItemAddHandler = item => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n  const cartItemRemoveHandler = id => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const submitOrderHandler = async userData => {\r\n    setIsSubmitting(true);\r\n    await fetch(\r\n      'https://react-meals-http-9c6df-default-rtdb.firebaseio.com/orders.json',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setIsSubmitting(false);\r\n    SetDidSubmit(true);\r\n  };\r\n  const cartModalContent = { cartItems };\r\n  <div className={classes.total}>\r\n    {hasItems ? (\r\n      <div>\r\n        <span>Total Amount</span>: <span>{totalAmount}</span>\r\n      </div>\r\n    ) : (\r\n      <React.Fragment>\r\n        <p className={classes.empty__text}>Your cart is empty!</p>\r\n        <div className={classes.actions}>\r\n          <button\r\n            className={classes['button--alt']}\r\n            onClick={props.onCloseCart}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </React.Fragment>\r\n    )}\r\n  </div>;\r\n  {\r\n    showCheckout && hasItems && (\r\n      <Checkout\r\n        onConfirm={submitOrderHandler}\r\n        onCancelCheckout={onCancelCheckOut}\r\n      />\r\n    );\r\n  }\r\n  {\r\n    hasItems && !showCheckout && (\r\n      <div className={classes.actions}>\r\n        <button className={classes['button--alt']} onClick={props.onCloseCart}>\r\n          Close\r\n        </button>\r\n        <button\r\n          onClick={() => setShowCheckout(true)}\r\n          className={classes.button}\r\n        >\r\n          Order\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  const cartItems = (\r\n    <ul className={classes['cart-items']}>\r\n      {cartCtx.items.map(item => (\r\n        <CartItem\r\n          price={item.price}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <Modal onCloseCart={props.onCloseCart}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        {hasItems ? (\r\n          <div>\r\n            <span>Total Amount</span>: <span>{totalAmount}</span>\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <p className={classes.empty__text}>Your cart is empty!</p>\r\n            <div className={classes.actions}>\r\n              <button\r\n                className={classes['button--alt']}\r\n                onClick={props.onCloseCart}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n      {showCheckout && hasItems && (\r\n        <Checkout\r\n          onConfirm={submitOrderHandler}\r\n          onCancelCheckout={onCancelCheckOut}\r\n        />\r\n      )}\r\n      {hasItems && !showCheckout && (\r\n        <div className={classes.actions}>\r\n          <button\r\n            className={classes['button--alt']}\r\n            onClick={props.onCloseCart}\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            onClick={() => setShowCheckout(true)}\r\n            className={classes.button}\r\n          >\r\n            Order\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}